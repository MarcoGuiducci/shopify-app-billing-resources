<div class="ei-container">
  <div>
    <label>
      <input type="checkbox"
             name="attributes[ei-request]"
             value="Yes"{% if cart.attributes["ei-request"] == "Yes" %} checked{% endif %} />
      <span>{{ 'ei.request' | t }}</span>
    </label>
  </div>
  <div class="ei-fileds">
    <div class="ei-customer-type">
      <label>
        <input type="radio"
               name="attributes[ei-customer-type]"
               value="private"
               {% if cart.attributes["ei-customer-type"] == "private" %}checked{% endif %}/>
        <span>{{ 'ei.customer-type.private' | t }}</span>
      </label>
      <label>
        <input type="radio"
               name="attributes[ei-customer-type]"
               value="company"
               {% if cart.attributes["ei-customer-type"] == "company" %}checked{% endif %}/>
        <span>{{ 'ei.customer-type.company' | t }}</span>
      </label>
      <label>
        <input type="radio"
               name="attributes[ei-customer-type]"
               value="public-administration"
               {% if cart.attributes["ei-customer-type"] == "public-administration" %}checked{% endif %}/>
        <span>{{ 'ei.customer-type.public-administration' | t }}</span>
      </label>
      <label>
        <input type="radio"
               name="attributes[ei-customer-type]"
               value="no-profit"
               {% if cart.attributes["ei-customer-type"] == "no-profit" %}checked{% endif %}/>
        <span>{{ 'ei.customer-type.no-profit' | t }}</span>
      </label>
    </div>
    <div>
      <label>
        <span>{{ 'ei.company' | t }}</span>
        <input type="text"
               name="attributes[ei-company]"
               value="{{ cart.attributes["ei-company"] }}"/>
      </label>
    </div>
    <div>
      <label>
        <span>{{ 'ei.fiscal-code' | t }}</span>
        <input type="text"
               maxlength="16"
               name="attributes[ei-fiscal-code]"
               value="{{ cart.attributes["ei-fiscal-code"] }}"/>
      </label>
    </div>
    <div>
      <label>
        <span>{{ 'ei.vat' | t }}</span>
        <input type="text"
               maxlength="16"
               name="attributes[ei-vat]"
               value="{{ cart.attributes["ei-vat"] }}"/>
      </label>
    </div>
    <div>
      <label>
        <span>{{ 'ei.sdi' | t }}</span>
        <input type="text"
               maxlength="7"
               name="attributes[ei-sdi]"
               value="{{ cart.attributes["ei-sdi"] }}"/>
      </label>
    </div>
    <div>
      <label>
        <span>{{ 'ei.pec' | t }}</span>
        <input type="email"
               name="attributes[ei-pec]"
               value="{{ cart.attributes["ei-pec"] }}"/>
      </label>
    </div>
    <div>
      <label>
        <span>{{ 'ei.cig' | t }}</span>
        <input type="text"
               maxlength="10"
               name="attributes[ei-cig]"
               value="{{ cart.attributes["ei-cig"] }}"/>
      </label>
    </div>
    <div>
      <label>
        <span>{{ 'ei.cup' | t }}</span>
        <input type="text"
               maxlength="15"
               name="attributes[ei-cup]"
               value="{{ cart.attributes["ei-cup"] }}"/>
      </label>
    </div>
    <div>
      <label>
        <input type="checkbox"
               name="attributes[ei-split-payment]"
               value="Yes"{% if cart.attributes["ei-split-payment"] == "Yes" %} checked{% endif %} />
        <span style="display: inline;">{{ 'ei.split-payment' | t }}</span>
      </label>
    </div>
  </div>
  </div>

<style>
  .ei-container .ei-fileds > div:not(.ei-customer-type) span{
    display: block;
    margin-bottom: 5px;
  }
  .ei-container .ei-fileds > div:not(.ei-customer-type) input:not([type*='checkbox']){
    display: block;
    width: 100%;
    max-width: 500px;
  }
  .ei-container .ei-fileds > div.ei-customer-type{
    margin-bottom: 10px;
  }
</style>

<script type="text/javascript">
  window.sintraElectronicInvoice = function () {
    function init(a) {
      bindRequireInvoiceFlag();
      bindSelectCustomer();
      bindSubmitCart();
      updateFormVisibility();
    }

    function bindRequireInvoiceFlag() {
      var element = document.querySelector('input[name="attributes[ei-request]"]');
      element.addEventListener("change", updateFormVisibility, false);
    }

    function bindSelectCustomer() {
      var element = document.querySelectorAll('input[name="attributes[ei-customer-type]"]');
      element.forEach(function () {
        addEventListener("change", updateCustomerType, false)
      });
    }

    function bindSubmitCart() {
      var element = document.querySelector('form[action="{{ routes.cart_url }}"]');
      element.addEventListener("submit", checkRequiredInput, false);
    }

    function updateFormVisibility() {
      var eiRequest = document.querySelector('input[name="attributes[ei-request]"]');

      if (!eiRequest.checked) {
        hideAndDisableAllFields();
      } else {
        updateCustomerType();
        showCustomerType();
      }
    }

    function showCustomerType() {
      var companyFields = [
        "ei-customer-type"
      ];
      showSingularFields(companyFields);
    }

    function updateCustomerType() {
      var eiRequest = document.querySelector('input[name="attributes[ei-request]"]'),
        eiCustomerType = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-customer-type]"]:checked');

      if (!eiRequest.checked) {
        return;
      }

      if (eiCustomerType) {
        hideAndDisableAllFields();
        if (eiCustomerType.value === 'private') {
          showPrivate();
        } else if (eiCustomerType.value === 'company') {
          showCompany();
        } else if (eiCustomerType.value === 'public-administration') {
          showPublicAdministration();
        } else if (eiCustomerType.value === 'no-profit') {
          showNoProfit();
        }
      }
    }

    function hideAndDisableAllFields() {
      var element = document.querySelector('form[action="{{ routes.cart_url }}"]'),
        attributes = element.querySelectorAll('input[name*=ei-]');
      for (let a1 of attributes) {
        if (a1.getAttribute('name').indexOf('ei-request') > -1) {
          continue;
        }

        a1.disabled = true;
        a1.parentElement.parentElement.style.display = "none";
      }
    }

    function showAndEnableInvoiceFields() {
      var element = document.querySelectorAll('form[action="{{ routes.cart_url }}"] input[name*=ei-]');
      for (let a1 of element) {
        if (a1.getAttribute('name').indexOf('ei-request') === -1) {
          a1.disabled = false;
          a1.parentElement.parentElement.style.display = "block";
        }
      }
    }

    function showSingularFields(fields) {
      for (let field of fields) {
        var attribute_name = 'input[name="attributes[' + field + ']"';
        if (field === "ei-customer-type") {
          var radio = document.querySelectorAll(attribute_name);
          for (i = 0; i < radio.length; i++) {
            radio[i].disabled = false;
            radio[i].parentElement.parentElement.style.display = "block";
          }
        } else {
          document.querySelector(attribute_name).disabled = false;
          document.querySelector(attribute_name).parentElement.parentElement.style.display = "block";
        }
      }
    }

    function showPrivate() {
      showSingularFields([
        "ei-customer-type",
        "ei-fiscal-code"
      ]);
    }

    function showCompany() {
      showSingularFields([
        "ei-customer-type",
        "ei-company",
        "ei-fiscal-code",
        "ei-vat",
        "ei-sdi",
        "ei-pec"
      ]);
    }

    function showPublicAdministration() {
      showSingularFields([
        "ei-customer-type",
        "ei-company",
        "ei-fiscal-code",
        "ei-vat",
        "ei-sdi",
        "ei-pec",
        "ei-cig",
        "ei-cup",
        "ei-split-payment"
      ]);
    }

    function showNoProfit() {
      showSingularFields([
        "ei-customer-type",
        "ei-company",
        "ei-fiscal-code",
        "ei-vat",
        "ei-sdi",
        "ei-pec"
      ]);
    }

    function isFiscalCodeValid(value) {
      let exp = '^[a-zA-Z]{6}[0-9]{2}[abcdehlmprstABCDEHLMPRST]{1}[0-9]{2}([a-zA-Z]{1}[0-9]{3})[a-zA-Z]{1}$',
        re = new RegExp(exp);
      return re.test(value);
    }

    function isVatValid(value) {
      let exp = '^([a-zA-Z]{2})?[0-9]{11}$',
        re = new RegExp(exp);
      return re.test(value);
    }

    function isPecValid(value) {
      let exp = '^[a-zA-Z0-9.!#$%&\'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$',
        re = new RegExp(exp);
      return re.test(value);
    }

    function isSdiValid(value) {
      let exp = '^[a-zA-Z0-9]{7}$',
        re = new RegExp(exp);
      return re.test(value);
    }

    function isCigValid(value) {
      let exp = '^[a-z0-9]{10}$',
        re = new RegExp(exp);
      return re.test(value);
    }

    function isCupValid(value) {
      let exp = '^[a-z0-9]{15}$',
        re = new RegExp(exp);
      return re.test(value);
    }


    function validate() {
      let eiRequest = document.querySelector('input[name="attributes[ei-request]"]'),
        eiCustomerType = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-customer-type]"]:checked');

      if (!eiRequest.checked || !eiCustomerType) {
        return;
      }

      let fiscalCode = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-fiscal-code]"]'),
        company = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-company]"]'),
        vat = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-vat]"]'),
        pec = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-pec]"]'),
        sdi = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-sdi]"]'),
        cig = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-cig]"]'),
        cup = document.querySelector('form[action="{{ routes.cart_url }}"] input[name="attributes[ei-cup]"]');

      switch (eiCustomerType.value) {
        case 'private':
          if (fiscalCode.value.trim() === '') {
            throw 'Fiscal code is required';
          }
          if (!isFiscalCodeValid(fiscalCode.value)) {
            throw 'Invalid fiscal code';
          }
          break;

        case 'company':
          if (company.value.trim() === '') {
            throw 'Company is required';
          }

          if (fiscalCode.value.trim() === '' && vat.value.trim() === '') {
            throw 'At least one between fiscal code and vat is required';
          }

          if (fiscalCode.value.trim() !== '') {
            if (!isFiscalCodeValid(fiscalCode.value)) {
              throw 'Invalid fiscal code';
            }
          }

          if (vat.value.trim() !== '') {
            if (!isVatValid(vat.value)) {
              throw 'Invalid vat';
            }
          }

          if (pec.value.trim() === '' && sdi.value.trim() === '') {
            throw 'At least one between PEC and SDI is required';
          }

          if (pec.value.trim() !== '') {
            if (!isPecValid(pec.value)) {
              throw 'Invalid PEC';
            }
          }

          if (sdi.value.trim() !== '') {
            if (!isSdiValid(sdi.value)) {
              throw 'SDI must be 7 characters';
            }
          }
          break;

        case 'public-administration':
          if (company.value.trim() === '') {
            throw 'Company is required';
          }

          if (fiscalCode.value.trim() === '' && vat.value.trim() === '') {
            throw 'At least one between fiscal code and vat is required';
          }

          if (fiscalCode.value.trim() !== '') {
            if (!isFiscalCodeValid(fiscalCode.value)) {
              throw 'Invalid fiscal code';
            }
          }

          if (vat.value.trim() !== '') {
            if (!isVatValid(vat.value)) {
              throw 'Invalid vat';
            }
          }

          if (pec.value.trim() === '' && sdi.value.trim() === '') {
            throw 'At least one between PEC and SDI is required';
          }

          if (pec.value.trim() !== '') {
            if (!isPecValid(pec.value)) {
              throw 'Invalid PEC';
            }
          }

          if (sdi.value.trim() !== '') {
            if (!isSdiValid(sdi.value)) {
              throw 'SDI must be 7 characters';
            }
          }

          if (cig.value.trim() !== '') {
            if (!isCigValid(cig.value)) {
              throw 'CIG must be 10 characters';
            }
          }

          if (cup.value.trim() !== '') {
            if (!isCupValid(cup.value)) {
              throw 'CUP must be 15 characters';
            }
          }

          break;

        case 'no-profit':
          if (company.value.trim() === '') {
            throw 'Company is required';
          }

          if (fiscalCode.value.trim() === '' && vat.value.trim() === '') {
            throw 'At least one between fiscal code and vat is required';
          }

          if (fiscalCode.value.trim() !== '') {
            if (!isFiscalCodeValid(fiscalCode.value)) {
              throw 'Invalid fiscal code';
            }
          }

          if (vat.value.trim() !== '') {
            if (!isVatValid(vat.value)) {
              throw 'Invalid vat';
            }
          }

          if (pec.value.trim() === '' && sdi.value.trim() === '') {
            throw 'At least one between PEC and SDI is required';
          }

          if (pec.value.trim() !== '') {
            if (!isPecValid(pec.value)) {
              throw 'Invalid PEC';
            }
          }

          if (sdi.value.trim() !== '') {
            if (!isSdiValid(sdi.value)) {
              throw 'SDI must be 7 characters';
            }
          }
          break;
      }
    }

    function report(message) {
      alert(message);
    }

    function checkRequiredInput(event) {
      try {
        validate();
      } catch (errorMessage) {
        report(errorMessage);
        event.preventDefault();
      }
    }

    return {
      init: init
    };
  };
  window.sintraElectronicInvoice().init();

</script>

